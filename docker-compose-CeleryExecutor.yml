version: '2.1'
services:
    redis:
        image: redis:latest
        container_name: af_redis
        command: redis-server --requirepass redispass

    postgres:
        image: postgres:latest
        container_name: af_postgres
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
#        ports:
#            -  5432:5432
#         Uncomment these lines to persist data on the local filesystem.
#             - PGDATA=/var/lib/postgresql/data/pgdata
#         volumes:
#             - ./pgdata:/var/lib/postgresql/data/pgdata

    webserver:
        extends:
            file: docker-compose.airflow.celery.yml
            service: airflow
        container_name: af_webserver
        command: webserver
        depends_on:
            - postgres
        ports:
            - 8080:8080
#        networks:
#            - proxy
#            - default
#        environment:
#            # Web Server Config
#            - AIRFLOW__WEBSERVER__DAG_DEFAULT_VIEW=graph
#            - AIRFLOW__WEBSERVER__HIDE_PAUSED_DAGS_BY_DEFAULT=true
#            - AIRFLOW__WEBSERVER__RBAC=true
#
#            # Web Server Performance tweaks
#            # 2 * NUM_CPU_CORES + 1
#            - AIRFLOW__WEBSERVER__WORKERS=5
#            # Restart workers every 30min instead of 30seconds
#            - AIRFLOW__WEBSERVER__WORKER_REFRESH_INTERVAL=1800
#        labels:
#            - "traefik.enable=true"
#            - "traefik.http.routers.airflow.rule=Host(`af.example.com`)"
#            - "traefik.http.routers.airflow.middlewares=admin-auth@file"
        healthcheck:
            test: ["CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3

    flower:
        extends:
            file: docker-compose.airflow.celery.yml
            service: airflow
        container_name: af_flower
        restart: always
        depends_on:
            - redis
        ports:
            - 5555:5555
        command: flower

    scheduler:
        extends:
            file: docker-compose.airflow.celery.yml
            service: airflow
        container_name: af_scheduler
        command: scheduler
        depends_on:
            - postgres
            - redis
#        environment:
#            # Scheduler Performance Tweaks
#            # Reduce how often DAGs are reloaded to dramatically reduce CPU use
#            - AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL=${AF_MIN_FILE_PROCESS_INTERVAL-60}
#            - AIRFLOW__SCHEDULER__MAX_THREADS=${AF_THREADS-1}

    worker:
        extends:
            file: docker-compose.airflow.celery.yml
            service: airflow
        container_name: af_worker
        command: worker
        depends_on:
            - postgres
            - redis

#networks:
#    proxy:
#        external: true
